/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    // ListNode* head;
    ListNode* fxn(ListNode* p)
    {
        
        if(p->next==NULL )
        {
            
            return p;
        }
       ListNode* pp= fxn(p->next);
        ListNode* q=p->next;
        q->next=p;
        p->next=NULL;
        return pp;
    }
    ListNode* reverseList(ListNode* p)
    {  if(p==NULL)
        return NULL;
        return fxn(p);
    }
};
//iterative way
ListNode* reverseList(ListNode* head) {
         ListNode *cur=head;
        ListNode *pre=NULL;
        while(cur!=NULL)
        {ListNode *temp=cur->next;
         cur->next=pre;
         pre=cur;
         cur=temp;
            
        }
        return pre;
    }
